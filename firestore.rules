rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // --------------------------------------------------------------------
    //  USER PROFILES
    // --------------------------------------------------------------------
    match /users/{userId} {
      allow read: if true;

      // A user may create their own profile document
      allow create: if request.auth != null
                   && request.auth.uid == userId
                   && request.resource.data.userId == userId;

      // A user may update or delete only their own profile
      allow update, delete: if request.auth != null
                          && request.auth.uid == userId;
    }

    // --------------------------------------------------------------------
    //  FOLLOWERS / FOLLOWING
    // --------------------------------------------------------------------
    // followers subcollection under each user
    match /users/{profileUid}/followers/{followerUid} {
      allow read: if true;
      // Only the follower themself can add or remove their record
      allow create, delete: if request.auth != null
                          && request.auth.uid == followerUid;
    }
    // following subcollection under each user
    match /users/{userUid}/following/{followingUid} {
      allow read: if true;
      // Only the user themself can add or remove their following record
      allow create, delete: if request.auth != null
                          && request.auth.uid == userUid;
    }

    // --------------------------------------------------------------------
    //  OUTFIT POSTS
    // --------------------------------------------------------------------
    match /outfits/{postId} {
      // Public feed
      allow read: if true;

      // Create a post only by its owner, with exactly these fields:
      allow create: if request.auth != null
        && request.auth.uid == request.resource.data.userId
        && request.resource.data.imageUrl is string
        && request.resource.data.caption  is string
        && request.resource.data.location is map
        && request.resource.data.createdAt is timestamp;

      // Only bump here—must only write likesCount or commentsCount, both ints
      allow update: if request.auth != null
        && request.writeFields.hasOnly(['likesCount','commentsCount'])
        && request.resource.data.likesCount    is int
        && request.resource.data.commentsCount is int;

      // Only the owner can delete their post
      allow delete: if request.auth != null
                  && request.auth.uid == resource.data.userId;
    }

    // --------------------------------------------------------------------
    //  LIKES SUBCOLLECTION
    // --------------------------------------------------------------------
    match /outfits/{postId}/likes/{likeUid} {
      allow read: if true;
      // A user may like/unlike only for their own user ID
      allow create, delete: if request.auth != null
                          && request.auth.uid == likeUid;
    }

    // --------------------------------------------------------------------
    //  COMMENTS SUBCOLLECTION
    // --------------------------------------------------------------------
    match /outfits/{postId}/comments/{commentId} {
      allow read: if true;

      // Create only with these exact fields, by the signed-in user
      allow create: if request.auth != null
        && request.resource.data.userId   == request.auth.uid
        && request.resource.data.username is string
        && request.resource.data.text     is string
        && request.resource.data.timestamp is timestamp;

      // Only the comment’s author can delete their comment
      allow delete: if request.auth != null
        && resource.data.userId == request.auth.uid;

      // No comment edits
      allow update: if false;
    }

    // --------------------------------------------------------------------
    //  DENY EVERYTHING ELSE
    // --------------------------------------------------------------------
    match /{document=**} {
      allow read, write: if false;
    }
  }
}

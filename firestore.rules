rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Basic outfit‐creation check
    function isValidOutfit() {
      return request.resource.data.caption is string
          && request.resource.data.tags    is list
          && request.resource.data.userId == request.auth.uid;
    }

    // --- USER PROFILES ---
    // Now: any signed-in user can list or get any user’s profile
    match /users/{userId} {
      // List & get:
      allow read: if request.auth != null;

      // Create your own profile only:
      allow create: if request.auth != null
                   && request.auth.uid == userId
                   && request.resource.data.userId == userId;

      // Update/delete your own profile only:
      allow update, delete: if request.auth != null
                          && request.auth.uid == userId;
    }

    // --- FOLLOWERS SUBCOLLECTION ---
    match /users/{userId}/followers/{followerId} {
      allow read:   if request.auth != null;
      allow create: if request.auth != null
                   && request.auth.uid == followerId;
      allow delete: if request.auth != null
                   && request.auth.uid == followerId;
    }

    // --- FOLLOWING SUBCOLLECTION ---
    match /users/{userId}/following/{followingId} {
      allow read:   if request.auth != null;
      allow create: if request.auth != null
                   && request.auth.uid == userId;
      allow delete: if request.auth != null
                   && request.auth.uid == userId;
    }

    // --- OUTFIT POSTS (parent doc) ---
    match /outfits/{postId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null
                  && request.auth.uid == request.resource.data.userId
                  && request.resource.data.imageUrl is string
                  && request.resource.data.createdAt == request.time
                  && isValidOutfit();
      allow update: if request.auth != null
                  && request.writeFields.hasOnly(['likesCount','commentsCount']);
      allow delete: if false;
    }

    // --- LIKES SUBCOLLECTION ---
    match /outfits/{postId}/likes/{userId} {
      allow read:   if request.auth != null;
      allow create: if request.auth != null
                   && request.auth.uid == userId;
      allow delete: if request.auth != null
                   && request.auth.uid == userId;
    }

    // --- COMMENTS SUBCOLLECTION ---
    match /outfits/{postId}/comments/{commentId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null
                   && request.resource.data.userId   == request.auth.uid
                   && request.resource.data.username is string
                   && request.resource.data.text     is string
                   && request.resource.data.timestamp is timestamp;
      allow delete: if request.auth != null
                   && resource.data.userId == request.auth.uid;
      allow update: if false;
    }

    // --- DENY EVERYTHING ELSE ---
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
